mutate(delta_cum_m4 = delta_m4 - rgdp_sma120 + m2v_sma120) %>%
mutate(delta_cum_m4_less_inflation = delta_m4 - rgdp_sma120 + m2v_sma120 - delta_cpi) %>%
mutate(delta_cum_m4_percent = 100*delta_cum_m4) %>%
mutate(cum_m4 = 100) %>%
na.omit() %>%
mutate(cum_m4 = 1000 + cumsum(delta_cum_m4_percent))
#%>%
#  mutate(cum_m4_sma120 = SMA(cum_m4, n=48))
View(df_inflation_remains)
df_inflation_remains = left_join(df_inflation_remains, df_m2v, by = "date")
# Calculate percent increase in Debt since Hussman Inflation conditions met
df_inflation_remains = df_div_m4
df_inflation_remains = left_join(df_inflation_remains, df_cpi, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_rgdp, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_m2v, by = "date")
# Fill NA's with previous value & remove reamining NA's
df_inflation_remains = fill(df_inflation_remains, names(df_inflation_remains))
df_inflation_remains = na.omit(df_inflation_remains)
# Index (Scale value to 100 for custom index
#df_inflation_remains = df_inflation_remains %>%
#     mutate_each(funs(./.[1]*100), setdiff(names(.), "date"))
df_inflation_remains = df_inflation_remains %>%
mutate(delta_m4 = m4) %>%
mutate(delta_m2v = m2v) %>%
mutate(delta_rgdp = rgdp) %>%
mutate(delta_cpi = cpi) %>%
mutate_each(funs(pct), c(delta_m4, delta_m2v, delta_rgdp, delta_cpi)) %>%
mutate(m2v_sma120 = SMA(delta_m2v, n=120))  %>%
mutate(rgdp_sma120 = SMA(delta_rgdp, n=120)) %>%
mutate(delta_cum_m4 = delta_m4 - rgdp_sma120 + m2v_sma120) %>%
mutate(delta_cum_m4_less_inflation = delta_m4 - rgdp_sma120 + m2v_sma120 - delta_cpi) %>%
mutate(delta_cum_m4_percent = 100*delta_cum_m4) %>%
mutate(cum_m4 = 100) %>%
na.omit() %>%
mutate(cum_m4 = cumsum(delta_cum_m4_percent)) %>%
mutate(cum_m4_less_inflation = cumsum(delta_cum_m4_percent_less_inflation))
df_inflation_remains = df_inflation_remains %>%
mutate(delta_m4 = m4) %>%
mutate(delta_m2v = m2v) %>%
mutate(delta_rgdp = rgdp) %>%
mutate(delta_cpi = cpi) %>%
mutate_each(funs(pct), c(delta_m4, delta_m2v, delta_rgdp, delta_cpi)) %>%
mutate(m2v_sma120 = SMA(delta_m2v, n=120))  %>%
mutate(rgdp_sma120 = SMA(delta_rgdp, n=120)) %>%
mutate(delta_cum_m4 = delta_m4 - rgdp_sma120 + m2v_sma120) %>%
mutate(delta_cum_m4_less_inflation = delta_m4 - rgdp_sma120 + m2v_sma120 - delta_cpi) %>%
mutate(delta_cum_m4_percent = 100*delta_cum_m4) %>%
mutate(cum_m4 = 100) %>%
na.omit() %>%
mutate(cum_m4 = cumsum(delta_cum_m4_percent)) %>%
mutate(cum_m4_less_inflation = cumsum(delta_cum_m4_less_inflation))
# Calculate percent increase in Debt since Hussman Inflation conditions met
df_inflation_remains = df_div_m4
df_inflation_remains = left_join(df_inflation_remains, df_cpi, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_rgdp, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_m2v, by = "date")
# Fill NA's with previous value & remove reamining NA's
df_inflation_remains = fill(df_inflation_remains, names(df_inflation_remains))
df_inflation_remains = na.omit(df_inflation_remains)
# Index (Scale value to 100 for custom index
#df_inflation_remains = df_inflation_remains %>%
#     mutate_each(funs(./.[1]*100), setdiff(names(.), "date"))
df_inflation_remains = df_inflation_remains %>%
mutate(delta_m4 = m4) %>%
mutate(delta_m2v = m2v) %>%
mutate(delta_rgdp = rgdp) %>%
mutate(delta_cpi = cpi) %>%
mutate_each(funs(pct), c(delta_m4, delta_m2v, delta_rgdp, delta_cpi)) %>%
mutate(m2v_sma120 = SMA(delta_m2v, n=120))  %>%
mutate(rgdp_sma120 = SMA(delta_rgdp, n=120)) %>%
mutate(delta_cum_m4 = delta_m4 - rgdp_sma120 + m2v_sma120) %>%
mutate(delta_cum_m4_less_inflation = delta_m4 - rgdp_sma120 + m2v_sma120 - delta_cpi) %>%
mutate(delta_cum_m4_percent = 100*delta_cum_m4) %>%
mutate(cum_m4 = 100) %>%
na.omit() %>%
mutate(cum_m4 = cumsum(delta_cum_m4_percent)) %>%
mutate(cum_m4_less_inflation = 1000 + cumsum(delta_cum_m4_less_inflation))
# Calculate percent increase in Debt since Hussman Inflation conditions met
df_inflation_remains = df_div_m4
df_inflation_remains = left_join(df_inflation_remains, df_cpi, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_rgdp, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_m2v, by = "date")
# Fill NA's with previous value & remove reamining NA's
df_inflation_remains = fill(df_inflation_remains, names(df_inflation_remains))
df_inflation_remains = na.omit(df_inflation_remains)
# Index (Scale value to 100 for custom index
#df_inflation_remains = df_inflation_remains %>%
#     mutate_each(funs(./.[1]*100), setdiff(names(.), "date"))
# Global Percent change year over year
n_years = 2
n_lag = 12 * n_years  # time it takes for inflation to manifest
pct <- function(x) {((x-lag(x, n = 12)) / lag(x, n = 12))} # Define percent function
df_inflation_remains = df_inflation_remains %>%
mutate(delta_m4 = m4) %>%
mutate(delta_m2v = m2v) %>%
mutate(delta_rgdp = rgdp) %>%
mutate(delta_cpi = cpi) %>%
mutate_each(funs(pct), c(delta_m4, delta_m2v, delta_rgdp, delta_cpi)) %>%
mutate(m2v_sma120 = SMA(delta_m2v, n=120))  %>%
mutate(rgdp_sma120 = SMA(delta_rgdp, n=120)) %>%
mutate(delta_cum_m4 = delta_m4 - rgdp_sma120 + m2v_sma120) %>%
mutate(delta_cum_m4_less_inflation = delta_m4 - rgdp_sma120 + m2v_sma120 - delta_cpi) %>%
mutate(delta_cum_m4_percent = 100*delta_cum_m4) %>%
mutate(cum_m4 = 100) %>%
na.omit() %>%
mutate(cum_m4 = cumsum(delta_cum_m4_percent)) %>%
mutate(cum_m4_less_inflation = 100 + cumsum(delta_cum_m4_less_inflation))
#%>%
#  mutate(cum_m4_sma120 = SMA(cum_m4, n=48))
# Calculate percent increase in Debt since Hussman Inflation conditions met
df_inflation_remains = df_div_m4
df_inflation_remains = left_join(df_inflation_remains, df_cpi, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_rgdp, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_m2v, by = "date")
# Fill NA's with previous value & remove reamining NA's
df_inflation_remains = fill(df_inflation_remains, names(df_inflation_remains))
df_inflation_remains = na.omit(df_inflation_remains)
# Index (Scale value to 100 for custom index
#df_inflation_remains = df_inflation_remains %>%
#     mutate_each(funs(./.[1]*100), setdiff(names(.), "date"))
df_inflation_remains = df_inflation_remains %>%
mutate(delta_m4 = m4) %>%
mutate(delta_m2v = m2v) %>%
mutate(delta_rgdp = rgdp) %>%
mutate(delta_cpi = cpi) %>%
mutate_each(funs(pct), c(delta_m4, delta_m2v, delta_rgdp, delta_cpi)) %>%
mutate(m2v_sma120 = SMA(delta_m2v, n=120))  %>%
mutate(rgdp_sma120 = SMA(delta_rgdp, n=120)) %>%
mutate(delta_cum_m4 = delta_m4 - rgdp_sma120 + m2v_sma120) %>%
mutate(delta_cum_m4_less_inflation = delta_m4 - rgdp_sma120 + m2v_sma120 - delta_cpi) %>%
mutate(delta_cum_m4_percent = 100*delta_cum_m4) %>%
mutate(cum_m4 = 100) %>%
na.omit() %>%
mutate(cum_m4 = cumsum(delta_cum_m4_percent)) %>%
mutate(cum_m4_less_inflation = 100 + cumsum(delta_cum_m4_less_inflation))
start_date = "2020-01-01"
df_inflation_time_frame = df_inflation_remains %>%
filter(between(Date, as.Date("21/9/2007", format = "%d/%m/%Y"),
as.Date("19/3/2008", format = "%d/%m/%Y")))
df_inflation_time_frame = df_inflation_remains %>%
filter(between(date, as.Date("21/9/2007", format = "%d/%m/%Y"),
as.Date("19/3/2008", format = "%d/%m/%Y")))
View(df_inflation_time_frame)
df_inflation_time_frame = df_inflation_remains %>%
filter(between(date, as.Date("01/01/2007", format = "%d/%m/%Y"),
as.Date("01/10/2008", format = "%d/%m/%Y")))
df_inflation_time_frame = df_inflation_remains %>%
filter(between(date, as.Date("2020-01-01", format = "%Y/%m/%d"),
as.Date("2022-01-01", format = "%Y/%m/%d")))
View(df_inflation_time_frame)
df_inflation_time_frame = df_inflation_remains %>%
filter(between(date, as.Date("2020-01-01"),
as.Date("2022-01-01")))
View(df_inflation_remains)
df_inflation_time_frame = df_inflation_remains %>%
filter(between(date, as_date("2020-01-01"),
as_date("2022-01-01")))
df_inflation_time_frame = df_inflation_remains %>%
filter(date > ymd(start_date))
View(df_inflation_time_frame)
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
View(df_inflation_time_segment)
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess = cum_m4 - first(cum_m4))
View(df_inflation_time_segment)
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess = (cum_m4 - first(cum_m4)) / first(cum_m4))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4))
start_date = "2018-01-01"
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4))
start_date = "2012-01-01"
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4))
start_date = "2009-01-01"
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4))
start_date = "2000-01-01"
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4))
start_date = "1995-01-01"
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4))
# Calculate percent increase in Debt since Hussman Inflation conditions met
df_inflation_remains = df_div_m4
df_inflation_remains = left_join(df_inflation_remains, df_cpi, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_rgdp, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_m2v, by = "date")
# Fill NA's with previous value & remove reamining NA's
df_inflation_remains = fill(df_inflation_remains, names(df_inflation_remains))
df_inflation_remains = na.omit(df_inflation_remains)
# Index (Scale value to 100 for custom index
#df_inflation_remains = df_inflation_remains %>%
#     mutate_each(funs(./.[1]*100), setdiff(names(.), "date"))
# Global Percent change year over year
n_years = 2
n_lag = 12 * n_years  # time it takes for inflation to manifest
pct <- function(x) {((x-lag(x, n = 12)) / lag(x, n = 12))} # Define percent function
df_inflation_remains = df_inflation_remains %>%
mutate(delta_m4 = m4) %>%
mutate(delta_m2v = m2v) %>%
mutate(delta_rgdp = rgdp) %>%
mutate(delta_cpi = cpi) %>%
mutate_each(funs(pct), c(delta_m4, delta_m2v, delta_rgdp, delta_cpi)) %>%
mutate(m2v_sma120 = SMA(delta_m2v, n=120))  %>%
mutate(rgdp_sma120 = SMA(delta_rgdp, n=120)) %>%
mutate(delta_cum_m4 = delta_m4 - rgdp_sma120 + m2v_sma120)
mutate(delta_cum_m4_percent = 100*delta_cum_m4) %>%
mutate(cum_m4 = 100) %>%
na.omit() %>%
mutate(cum_m4 = cumsum(delta_cum_m4_percent))
df_inflation_remains = df_inflation_remains %>%
mutate(delta_m4 = m4) %>%
mutate(delta_m2v = m2v) %>%
mutate(delta_rgdp = rgdp) %>%
mutate(delta_cpi = cpi) %>%
mutate_each(funs(pct), c(delta_m4, delta_m2v, delta_rgdp, delta_cpi)) %>%
mutate(m2v_sma120 = SMA(delta_m2v, n=120))  %>%
mutate(rgdp_sma120 = SMA(delta_rgdp, n=120)) %>%
mutate(delta_cum_m4 = delta_m4 - rgdp_sma120 + m2v_sma120) %>%
mutate(delta_cum_m4_percent = 100*delta_cum_m4) %>%
mutate(cum_m4 = 100) %>%
na.omit() %>%
mutate(cum_m4 = cumsum(delta_cum_m4_percent))
View(df_inflation_remains)
# Calculate percent increase in Debt since Hussman Inflation conditions met
df_inflation_remains = df_div_m4
df_inflation_remains = left_join(df_inflation_remains, df_cpi, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_rgdp, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_m2v, by = "date")
# Fill NA's with previous value & remove reamining NA's
df_inflation_remains = fill(df_inflation_remains, names(df_inflation_remains))
df_inflation_remains = na.omit(df_inflation_remains)
# Index (Scale value to 100 for custom index
#df_inflation_remains = df_inflation_remains %>%
#     mutate_each(funs(./.[1]*100), setdiff(names(.), "date"))
# Global Percent change year over year
n_years = 2
n_lag = 12 * n_years  # time it takes for inflation to manifest
pct <- function(x) {((x-lag(x, n = 12)) / lag(x, n = 12))} # Define percent function
df_inflation_remains = df_inflation_remains %>%
mutate(delta_m4 = m4) %>%
mutate(delta_m2v = m2v) %>%
mutate(delta_rgdp = rgdp) %>%
mutate(delta_cpi = cpi) %>%
mutate_each(funs(pct), c(delta_m4, delta_m2v, delta_rgdp, delta_cpi)) %>%
mutate(m2v_sma120 = SMA(delta_m2v, n=120))  %>%
mutate(rgdp_sma120 = SMA(delta_rgdp, n=120)) %>%
mutate(delta_cum_m4 = delta_m4 - rgdp_sma120 + m2v_sma120) %>%
mutate(delta_cum_m4_percent = 100*delta_cum_m4) %>%
mutate(cum_m4 = 100) %>%
na.omit() %>%
mutate(cum_m4 = cumsum(delta_cum_m4_percent)) %>%
mutate(cum_cpi = cumsum(delta_cpi))
# Calculate percent increase in Debt since Hussman Inflation conditions met
df_inflation_remains = df_div_m4
df_inflation_remains = left_join(df_inflation_remains, df_cpi, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_rgdp, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_m2v, by = "date")
# Fill NA's with previous value & remove reamining NA's
df_inflation_remains = fill(df_inflation_remains, names(df_inflation_remains))
df_inflation_remains = na.omit(df_inflation_remains)
# Index (Scale value to 100 for custom index
#df_inflation_remains = df_inflation_remains %>%
#     mutate_each(funs(./.[1]*100), setdiff(names(.), "date"))
# Global Percent change year over year
n_years = 2
n_lag = 12 * n_years  # time it takes for inflation to manifest
pct <- function(x) {((x-lag(x, n = 12)) / lag(x, n = 12))} # Define percent function
df_inflation_remains = df_inflation_remains %>%
mutate(delta_m4 = m4) %>%
mutate(delta_m2v = m2v) %>%
mutate(delta_rgdp = rgdp) %>%
mutate(delta_cpi = cpi) %>%
mutate_each(funs(pct), c(delta_m4, delta_m2v, delta_rgdp, delta_cpi)) %>%
mutate(m2v_sma120 = SMA(delta_m2v, n=120))  %>%
mutate(rgdp_sma120 = SMA(delta_rgdp, n=120)) %>%
mutate(delta_cum_m4 = delta_m4 - rgdp_sma120 + m2v_sma120) %>%
mutate(delta_cum_m4_percent = 100*delta_cum_m4) %>%
mutate(cum_m4 = 100) %>%
na.omit() %>%
mutate(cum_m4 = cumsum(delta_cum_m4_percent)) %>%
mutate(cum_cpi = 100 * cumsum(delta_cpi))
start_date = "2020-01-01"
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4))
View(df_inflation_time_segment)
View(df_inflation_time_frame)
# Tidy libraries
# install.packages("devtools")
# devtools::install_github("business-science/tidyquant")
# install.packages("broom")
library(knitr)
library(tidyverse)
library(tidyr)
library(tibble)
library(lubridate)
library(TTR)
library(tidyquant)
library(broom)
library(corrr)
library(alfred)
library(RcppRoll)
library(Hmisc)
library(kableExtra)
library(huxtable)
library(pracma)
library(gridExtra)
library(xts)
# library(scales)  # Conflict with purr()
library(directlabels)
library(ggthemes)
library(ggfortify)
library(zoo)  # used for rollmean
library(padr)
library(roll)
library(ecm)
# Data acquisition libraries
library(Quandl)
library(quantmod)
library(fredr)  # Fred
library(imfr, warn.conflicts = FALSE, quietly=TRUE)  # IMF
library(gdata)
library(readxl)
library(rstudioapi)
library(openxlsx)
library(fpp2)  # Hyndman Forecast package
library(DataCombine)
# Specific API  data
# library(devtools)
# install_github('mikeasilva/blsAPI')
# library(blsAPI)
library(blsR)
# User defined functions
source("./chart_recession.R")  # for add_rec_shade recession shading function
# source("./signal_aggregation_functions.R")
# source("./financial_functions.R")
# source("./cycleanalytics.R")
# Date to start download
start_date = "1970-01-01"
end_date = today()
# Get CPI
# Download CPI data from FRED
df_cpi = as_tibble(get_fred_series("CPIAUCSL", series_name = "cpi", observation_start = start_date,
observation_end = end_date))
# Download real GDP data from FRED
df_rgdp = as_tibble(get_fred_series("GDPC1", series_name = "rgdp", observation_start = start_date,
observation_end = end_date))
# Download real GDP data from FRED
df_m2v = as_tibble(get_fred_series("M2V", series_name = "m2v", observation_start = start_date,
observation_end = end_date))
# Download Divisia data file from URL
download.file("https://centerforfinancialstability.org/amfm/Divisia.xlsx",
destfile = "divisia_m4.xlsx")
# Read Excel file into R
df_div_m4 = read_xlsx(path = "divisia_m4.xlsx", sheet=1, skip=1, col_names = TRUE)
# Clear unused columns and rename
df_div_m4 = as_tibble(df_div_m4[ , c(1,2)])
names(df_div_m4) = c("date", "m4")
# Calculate percent increase in Debt since Hussman Inflation conditions met
df_inflation_remains = df_div_m4
df_inflation_remains = left_join(df_inflation_remains, df_cpi, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_rgdp, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_m2v, by = "date")
# Fill NA's with previous value & remove reamining NA's
df_inflation_remains = fill(df_inflation_remains, names(df_inflation_remains))
df_inflation_remains = na.omit(df_inflation_remains)
# Index (Scale value to 100 for custom index
#df_inflation_remains = df_inflation_remains %>%
#     mutate_each(funs(./.[1]*100), setdiff(names(.), "date"))
# Global Percent change year over year
n_years = 2
n_lag = 12 * n_years  # time it takes for inflation to manifest
pct <- function(x) {((x-lag(x, n = 12)) / lag(x, n = 12))} # Define percent function
df_inflation_remains = df_inflation_remains %>%
mutate(delta_m4 = m4) %>%
mutate(delta_m2v = m2v) %>%
mutate(delta_rgdp = rgdp) %>%
mutate(delta_cpi = cpi) %>%
mutate_each(funs(pct), c(delta_m4, delta_m2v, delta_rgdp, delta_cpi)) %>%
mutate(m2v_sma120 = SMA(delta_m2v, n=120))  %>%
mutate(rgdp_sma120 = SMA(delta_rgdp, n=120)) %>%
mutate(delta_cum_m4 = delta_m4 - rgdp_sma120 + m2v_sma120) %>%
mutate(delta_cum_m4_percent = 100*delta_cum_m4) %>%
mutate(cum_m4 = 100) %>%
na.omit() %>%
mutate(cum_m4 = cumsum(delta_cum_m4_percent)) %>%
mutate(cum_cpi = 100 * cumsum(delta_cpi))
# Select time frame in which to judge inflation remaining
# Possible inflationary M4 increase started Jan 2020
# Select that time frame to see cummulated amount of M4 til today
start_date = "2020-01-01"
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4))
View(df_inflation_time_segment)
# Select time frame in which to judge inflation remaining
# Possible inflationary M4 increase started Jan 2020
# Select that time frame to see cummulated amount of M4 til today
start_date = "2020-01-01"
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess_m4 = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4)) %>%
mutate(excess_icpi = 100 * (cum_cpi - first(cum_cpi) / first(cum_cpi)))
first(cum_cpi)
# Calculate percent increase in Debt since Hussman Inflation conditions met
df_inflation_remains = df_div_m4
df_inflation_remains = left_join(df_inflation_remains, df_cpi, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_rgdp, by = "date")
df_inflation_remains = left_join(df_inflation_remains, df_m2v, by = "date")
# Fill NA's with previous value & remove reamining NA's
df_inflation_remains = fill(df_inflation_remains, names(df_inflation_remains))
df_inflation_remains = na.omit(df_inflation_remains)
# Index (Scale value to 100 for custom index
#df_inflation_remains = df_inflation_remains %>%
#     mutate_each(funs(./.[1]*100), setdiff(names(.), "date"))
# Global Percent change year over year
n_years = 2
n_lag = 12 * n_years  # time it takes for inflation to manifest
pct <- function(x) {((x-lag(x, n = 12)) / lag(x, n = 12))} # Define percent function
df_inflation_remains = df_inflation_remains %>%
mutate(delta_m4 = m4) %>%
mutate(delta_m2v = m2v) %>%
mutate(delta_rgdp = rgdp) %>%
mutate(delta_cpi = cpi) %>%
mutate_each(funs(pct), c(delta_m4, delta_m2v, delta_rgdp, delta_cpi)) %>%
mutate(m2v_sma120 = SMA(delta_m2v, n=120))  %>%
mutate(rgdp_sma120 = SMA(delta_rgdp, n=120)) %>%
mutate(delta_cum_m4 = delta_m4 - rgdp_sma120 + m2v_sma120) %>%
mutate(delta_cum_m4_percent = 100*delta_cum_m4) %>%
mutate(cum_m4 = 100) %>%
na.omit() %>%
mutate(cum_m4 = cumsum(delta_cum_m4_percent)) %>%
mutate(cum_cpi = 100 * cumsum(delta_cpi))
# Select time frame in which to judge inflation remaining
# Possible inflationary M4 increase started Jan 2020
# Select that time frame to see cummulated amount of M4 til today
start_date = "2020-01-01"
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess_m4 = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4)) %>%
mutate(excess_cpi = 100 * (cum_cpi - first(cum_cpi) / first(cum_cpi)))
View(df_inflation_time_segment)
# Select time frame in which to judge inflation remaining
# Possible inflationary M4 increase started Jan 2020
# Select that time frame to see cummulated amount of M4 til today
start_date = "2020-01-01"
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess_m4 = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4)) %>%
mutate(excess_cpi = 100 * (cum_cpi - first(cum_cpi)) / first(cum_cpi))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess_m4 = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4)) %>%
mutate(excess_cpi = 100 * (cpi - first(cpi)) / first(cpi))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess_m4 = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4)) %>%
mutate(used_up_excess_m4 = 100 * (cpi - first(cpi)) / first(cpi))
start_date = "2020-01-01"
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess_m4 = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4)) %>%
mutate(delta_cpi_from_start = 100 * (cpi - first(cpi)) / first(cpi))
start_date = "2020-01-01"
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess_m4 = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4)) %>%
mutate(delta_cpi_from_start_date = 100 * (cpi - first(cpi)) / first(cpi))
start_date = "2020-01-01"
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess_m4 = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4)) %>%
mutate(delta_cpi_from_start_date = 100 * (cpi - first(cpi)) / first(cpi)) %>%
mutate(excess_cpi_left = excess_m4 - delta_cpi_from_start_date)
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess_m4 = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4)) %>%
mutate(delta_cpi_from_start_date = 100 * (cpi - first(cpi)) / first(cpi)) %>%
mutate(excess_m4_left = excess_m4 - delta_cpi_from_start_date)
start_date = "2020-01-01"
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess_m4 = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4)) %>%
mutate(delta_cpi_from_start_date = 100 * (cpi - first(cpi)) / first(cpi)) %>%
mutate(excess_m4_left = excess_m4 - delta_cpi_from_start_date)
start_date = "2020-01-01"
df_inflation_time_segment = df_inflation_remains %>%
filter(date > ymd(start_date))
df_inflation_time_segment = df_inflation_time_segment %>%
mutate(excess_m4 = 100 *(cum_m4 - first(cum_m4)) / first(cum_m4)) %>%
mutate(delta_cpi_from_start_date = 100 * (cpi - first(cpi)) / first(cpi)) %>%
mutate(excess_inflation_left = excess_m4 - delta_cpi_from_start_date)
